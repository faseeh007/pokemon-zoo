{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nconst initialState = {\n  isUserLoggedIn: false,\n  username: \"\"\n};\nexport const authSlice = createSlice({\n  name: \"auth\",\n  initialState: initialState,\n  reducers: {\n    login: (state, action) => {\n      const user = action.payload;\n      if (!user) return alert(\"Login failed. Incorrect username or password.\");\n      state.username = user.username;\n      state.isUserLoggedIn = true;\n    },\n    logout: (state, action) => {\n      state.username = \"\";\n      state.isUserLoggedIn = false;\n      window.localStorage.removeItem(\"token\");\n    },\n    signup: (state, action) => {\n      const user = action.payload;\n      if (!user) return alert(\"Sign up failed. Please try again.\");\n      state.username = user.username;\n      state.isUserLoggedIn = true;\n    }\n  }\n}); // window.localStorage.setItem(\n//   \"token\",\n//   autoLoginResponse.headers[\"auth-token\"]\n// )\n\nexport const tryAutoLogin = () => {\n  return async dispatch => {\n    try {\n      const autoLoginResponse = await axios.get(\"/api/auth/autologin\", {\n        headers: {\n          \"auth-token\": window.localStorage.getItem(\"token\")\n        }\n      });\n\n      if (autoLoginResponse) {\n        const user = {\n          token: autoLoginResponse.headers[\"auth-token\"],\n          username: autoLoginResponse.data.username\n        };\n        dispatch(login(user));\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  };\n};\nexport const tryLogin = (username, password) => {\n  return async dispatch => {\n    try {\n      const response = await axios.post(\"/api/auth/login\", {\n        username: username,\n        password: password\n      });\n      const user = {\n        token: response.headers[\"auth-token\"],\n        username: response.data.username\n      };\n      window.localStorage.setItem(\"token\", response.headers[\"auth-token\"]);\n      dispatch(login(user));\n    } catch (e) {\n      alert(\"Incorrect Username/Password.\");\n    }\n  };\n};\nexport const trySignup = (username, password) => {\n  return async dispatch => {\n    try {\n      const response = await axios.post(\"/api/auth/signup\", {\n        username: username,\n        password: password\n      });\n      const user = {\n        token: response.headers[\"auth-token\"],\n        username: response.data.username\n      };\n      window.localStorage.setItem(\"token\", response.headers[\"auth-token\"]);\n      dispatch(signup(user));\n    } catch (e) {\n      alert(e.response.data.msg[0].message);\n    }\n  };\n};\nexport const selectorAuth = state => state.auth;\nexport const {\n  login,\n  logout,\n  signup\n} = authSlice.actions;\nexport default authSlice.reducer;","map":{"version":3,"sources":["/home/faseeh/faseehWorkspace/Pokemon/pokezoo/frontend/src/authSlice.js"],"names":["createSlice","axios","initialState","isUserLoggedIn","username","authSlice","name","reducers","login","state","action","user","payload","alert","logout","window","localStorage","removeItem","signup","tryAutoLogin","dispatch","autoLoginResponse","get","headers","getItem","token","data","e","console","log","tryLogin","password","response","post","setItem","trySignup","msg","message","selectorAuth","auth","actions","reducer"],"mappings":"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","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\"\nimport axios from \"axios\"\n\nconst initialState = {\n  isUserLoggedIn: false,\n  username: \"\",\n}\n\nexport const authSlice = createSlice({\n  name: \"auth\",\n  initialState: initialState,\n  reducers: {\n    login: (state, action) => {\n      const user = action.payload\n\n      if (!user) return alert(\"Login failed. Incorrect username or password.\")\n\n      state.username = user.username\n      state.isUserLoggedIn = true\n    },\n    logout: (state, action) => {\n      state.username = \"\"\n      state.isUserLoggedIn = false\n      window.localStorage.removeItem(\"token\")\n    },\n    signup: (state, action) => {\n      const user = action.payload\n\n      if (!user) return alert(\"Sign up failed. Please try again.\")\n\n      state.username = user.username\n      state.isUserLoggedIn = true\n    },\n  },\n})\n\n// window.localStorage.setItem(\n//   \"token\",\n//   autoLoginResponse.headers[\"auth-token\"]\n// )\n\nexport const tryAutoLogin = () => {\n  return async dispatch => {\n    try {\n      const autoLoginResponse = await axios.get(\"/api/auth/autologin\", {\n        headers: { \"auth-token\": window.localStorage.getItem(\"token\") },\n      })\n\n      if (autoLoginResponse) {\n        const user = {\n          token: autoLoginResponse.headers[\"auth-token\"],\n          username: autoLoginResponse.data.username,\n        }\n\n        dispatch(login(user))\n      }\n    } catch (e) {\n      console.log(e)\n    }\n  }\n}\n\nexport const tryLogin = (username, password) => {\n  return async dispatch => {\n    try {\n      const response = await axios.post(\"/api/auth/login\", {\n        username: username,\n        password: password,\n      })\n\n      const user = {\n        token: response.headers[\"auth-token\"],\n        username: response.data.username,\n      }\n\n      window.localStorage.setItem(\"token\", response.headers[\"auth-token\"])\n\n      dispatch(login(user))\n    } catch (e) {\n      alert(\"Incorrect Username/Password.\")\n    }\n  }\n}\n\nexport const trySignup = (username, password) => {\n  return async dispatch => {\n    try {\n      const response = await axios.post(\"/api/auth/signup\", {\n        username: username,\n        password: password,\n      })\n\n      const user = {\n        token: response.headers[\"auth-token\"],\n        username: response.data.username,\n      }\n\n      window.localStorage.setItem(\"token\", response.headers[\"auth-token\"])\n\n      dispatch(signup(user))\n    } catch (e) {\n      alert(e.response.data.msg[0].message)\n    }\n  }\n}\n\nexport const selectorAuth = state => state.auth\nexport const { login, logout, signup } = authSlice.actions\nexport default authSlice.reducer\n"]},"metadata":{},"sourceType":"module"}