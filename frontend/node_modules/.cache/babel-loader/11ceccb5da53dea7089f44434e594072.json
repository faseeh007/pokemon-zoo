{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nconst initialState = {\n  collectionList: []\n};\nexport const collectionSlice = createSlice({\n  name: \"collection\",\n  initialState: initialState,\n  reducers: {\n    setInitialCollection: (state, action) => {\n      state.collectionList = action.payload;\n    },\n    // create a collection only if the same name does not already exists.\n    create: (state, action) => {\n      if (action.payload !== \"\") {\n        state.collectionList.push({\n          collectionId: action.payload.collectionId,\n          collectionName: action.payload.collectionName,\n          pokemons: []\n        });\n      } else {\n        alert(\"Collection name cannot be blank.\");\n      }\n    },\n    // add pokemon to a collection\n    addPoke: (state, action) => {\n      // get the index of the selected collection in the collectionList array using the collection ID.\n      const collectionListIndex = state.collectionList.findIndex(x => x.collectionId === action.payload.collectionId);\n      const collectionName = state.collectionList.find(c => c.collectionId === action.payload.collectionId).name; // If collection exists, then push the pokemon in it.\n\n      if (collectionListIndex !== -1) {\n        if ( // If a pokemon with the same name already exists, do not put into the list.\n        // Instead, alert the user.\n        state.collectionList[collectionListIndex].pokemons.find(poke => poke.pokeName === action.payload.pokeName)) {\n          alert(`${action.payload.pokeName} already exists in collection \"${collectionName}\".`);\n        } else {\n          state.collectionList[collectionListIndex].pokemons.push({\n            pokeName: action.payload.pokeName,\n            pokeUrl: action.payload.pokeUrl,\n            pokeType: action.payload.pokeType\n          });\n        }\n      }\n    },\n    // remove a collection.\n    remove: (state, action) => {\n      const collectionIdToRemove = action.payload.collectionId;\n      const collectionIdRemoveIndex = state.collectionList.findIndex(col => col.collectionId === collectionIdToRemove);\n\n      if (collectionIdRemoveIndex !== -1) {\n        state.collectionList.splice(collectionIdRemoveIndex, 1);\n      }\n    },\n    // Edit collection name and pokemon in it.\n    edit: (state, action) => {\n      const collectionIdToEdit = action.payload.collectionId;\n      const editedName = action.payload.collectionName;\n      const editedPokemonList = action.payload.pokemonList;\n      const collectionIdEditIndex = state.collectionList.findIndex(col => col.collectionId === collectionIdToEdit);\n\n      if (collectionIdEditIndex !== -1) {\n        state.collectionList[collectionIdEditIndex].collectionName = editedName;\n        state.collectionList[collectionIdEditIndex].pokemons = editedPokemonList;\n      }\n    }\n  }\n}); // fetch all collections\n\nexport const fetchCollection = username => {\n  return async (dispatch, getState) => {\n    try {\n      const response = await axios.get(`api/collection/display/${username}`, {\n        headers: {\n          \"auth-token\": window.localStorage.getItem(\"token\")\n        }\n      });\n      dispatch(setInitialCollection(response.data));\n    } catch (e) {\n      console.log(e);\n    }\n  };\n}; // create a collection - async\n\nexport const createCollection = collectionObj => {\n  return async dispatch => {\n    try {\n      const response = await axios.post(\"api/collection/create\", collectionObj, {\n        headers: {\n          \"auth-token\": window.localStorage.getItem(\"token\")\n        }\n      });\n      const collectionName = response.data.pokeCollection[response.data.pokeCollection.length - 1].collectionName;\n      const collectionId = response.data.pokeCollection[response.data.pokeCollection.length - 1].collectionId;\n      dispatch(create({\n        collectionId: collectionId,\n        collectionName: collectionName\n      }));\n    } catch (e) {\n      alert(e.response.data.msg);\n      console.log(e);\n    }\n  };\n}; // remove a collection - async\n\nexport const removeCollection = collectionObj => {\n  console.log(collectionObj);\n  return async dispatch => {\n    try {\n      const response = await axios.post(\"api/collection/delete\", collectionObj, {\n        headers: {\n          \"auth-token\": window.localStorage.getItem(\"token\")\n        }\n      });\n      dispatch(remove({\n        collectionId: response.data.collectionId\n      }));\n    } catch (e) {\n      console.log(e);\n    }\n  };\n}; // add pokemon to a collection - async\n\nexport const addPokemon = pokeObj => {\n  return async dispatch => {\n    try {\n      const response = await axios.post(\"api/collection/addpoke\", pokeObj, {\n        headers: {\n          \"auth-token\": window.localStorage.getItem(\"token\")\n        }\n      });\n      dispatch(addPoke(response.data));\n    } catch (e) {\n      alert(e.response.data.msg);\n      console.log(e);\n    }\n  };\n}; // edit collection -  async\n\nexport const editCollection = collectionObj => {\n  return async dispatch => {\n    try {\n      const response = await axios.post(\"api/collection/editcollection\", collectionObj, {\n        headers: {\n          \"auth-token\": window.localStorage.getItem(\"token\")\n        }\n      });\n      dispatch(edit(response.data));\n    } catch (e) {\n      console.log(e);\n    }\n  };\n};\nexport const selectorCollection = state => state.collection.collectionList;\nexport const {\n  setInitialCollection,\n  create,\n  add,\n  remove,\n  edit,\n  addPoke\n} = collectionSlice.actions;\nexport default collectionSlice.reducer;","map":{"version":3,"sources":["/home/faseeh/faseehWorkspace/Pokemon/pokezoo/frontend/src/features/home/collectionSlice.js"],"names":["createSlice","axios","initialState","collectionList","collectionSlice","name","reducers","setInitialCollection","state","action","payload","create","push","collectionId","collectionName","pokemons","alert","addPoke","collectionListIndex","findIndex","x","find","c","poke","pokeName","pokeUrl","pokeType","remove","collectionIdToRemove","collectionIdRemoveIndex","col","splice","edit","collectionIdToEdit","editedName","editedPokemonList","pokemonList","collectionIdEditIndex","fetchCollection","username","dispatch","getState","response","get","headers","window","localStorage","getItem","data","e","console","log","createCollection","collectionObj","post","pokeCollection","length","msg","removeCollection","addPokemon","pokeObj","editCollection","selectorCollection","collection","add","actions","reducer"],"mappings":"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","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\"\nimport axios from \"axios\"\n\nconst initialState = {\n  collectionList: [],\n}\n\nexport const collectionSlice = createSlice({\n  name: \"collection\",\n  initialState: initialState,\n  reducers: {\n    setInitialCollection: (state, action) => {\n      state.collectionList = action.payload\n    },\n\n    // create a collection only if the same name does not already exists.\n    create: (state, action) => {\n      if (action.payload !== \"\") {\n        state.collectionList.push({\n          collectionId: action.payload.collectionId,\n          collectionName: action.payload.collectionName,\n          pokemons: [],\n        })\n      } else {\n        alert(\"Collection name cannot be blank.\")\n      }\n    },\n    // add pokemon to a collection\n    addPoke: (state, action) => {\n      // get the index of the selected collection in the collectionList array using the collection ID.\n      const collectionListIndex = state.collectionList.findIndex(\n        x => x.collectionId === action.payload.collectionId\n      )\n\n      const collectionName = state.collectionList.find(\n        c => c.collectionId === action.payload.collectionId\n      ).name\n\n      // If collection exists, then push the pokemon in it.\n      if (collectionListIndex !== -1) {\n        if (\n          // If a pokemon with the same name already exists, do not put into the list.\n          // Instead, alert the user.\n          state.collectionList[collectionListIndex].pokemons.find(\n            poke => poke.pokeName === action.payload.pokeName\n          )\n        ) {\n          alert(\n            `${action.payload.pokeName} already exists in collection \"${collectionName}\".`\n          )\n        } else {\n          state.collectionList[collectionListIndex].pokemons.push({\n            pokeName: action.payload.pokeName,\n            pokeUrl: action.payload.pokeUrl,\n            pokeType: action.payload.pokeType,\n          })\n        }\n      }\n    },\n\n    // remove a collection.\n    remove: (state, action) => {\n      const collectionIdToRemove = action.payload.collectionId\n\n      const collectionIdRemoveIndex = state.collectionList.findIndex(\n        col => col.collectionId === collectionIdToRemove\n      )\n\n      if (collectionIdRemoveIndex !== -1) {\n        state.collectionList.splice(collectionIdRemoveIndex, 1)\n      }\n    },\n    // Edit collection name and pokemon in it.\n    edit: (state, action) => {\n      const collectionIdToEdit = action.payload.collectionId\n      const editedName = action.payload.collectionName\n      const editedPokemonList = action.payload.pokemonList\n\n      const collectionIdEditIndex = state.collectionList.findIndex(\n        col => col.collectionId === collectionIdToEdit\n      )\n\n      if (collectionIdEditIndex !== -1) {\n        state.collectionList[collectionIdEditIndex].collectionName = editedName\n        state.collectionList[collectionIdEditIndex].pokemons = editedPokemonList\n      }\n    },\n  },\n})\n\n// fetch all collections\nexport const fetchCollection = username => {\n  return async (dispatch, getState) => {\n    try {\n      const response = await axios.get(`api/collection/display/${username}`, {\n        headers: { \"auth-token\": window.localStorage.getItem(\"token\") },\n      })\n      dispatch(setInitialCollection(response.data))\n    } catch (e) {\n      console.log(e)\n    }\n  }\n}\n\n// create a collection - async\nexport const createCollection = collectionObj => {\n  return async dispatch => {\n    try {\n      const response = await axios.post(\n        \"api/collection/create\",\n        collectionObj,\n        { headers: { \"auth-token\": window.localStorage.getItem(\"token\") } }\n      )\n\n      const collectionName =\n        response.data.pokeCollection[response.data.pokeCollection.length - 1]\n          .collectionName\n\n      const collectionId =\n        response.data.pokeCollection[response.data.pokeCollection.length - 1]\n          .collectionId\n      dispatch(\n        create({ collectionId: collectionId, collectionName: collectionName })\n      )\n    } catch (e) {\n      alert(e.response.data.msg)\n      console.log(e)\n    }\n  }\n}\n\n// remove a collection - async\nexport const removeCollection = collectionObj => {\n  console.log(collectionObj)\n  return async dispatch => {\n    try {\n      const response = await axios.post(\n        \"api/collection/delete\",\n        collectionObj,\n        { headers: { \"auth-token\": window.localStorage.getItem(\"token\") } }\n      )\n      dispatch(remove({ collectionId: response.data.collectionId }))\n    } catch (e) {\n      console.log(e)\n    }\n  }\n}\n\n// add pokemon to a collection - async\nexport const addPokemon = pokeObj => {\n  return async dispatch => {\n    try {\n      const response = await axios.post(\"api/collection/addpoke\", pokeObj, {\n        headers: { \"auth-token\": window.localStorage.getItem(\"token\") },\n      })\n      dispatch(addPoke(response.data))\n    } catch (e) {\n      alert(e.response.data.msg)\n      console.log(e)\n    }\n  }\n}\n\n// edit collection -  async\nexport const editCollection = collectionObj => {\n  return async dispatch => {\n    try {\n      const response = await axios.post(\n        \"api/collection/editcollection\",\n        collectionObj,\n        {\n          headers: { \"auth-token\": window.localStorage.getItem(\"token\") },\n        }\n      )\n      dispatch(edit(response.data))\n    } catch (e) {\n      console.log(e)\n    }\n  }\n}\n\nexport const selectorCollection = state => state.collection.collectionList\nexport const {\n  setInitialCollection,\n  create,\n  add,\n  remove,\n  edit,\n  addPoke,\n} = collectionSlice.actions\nexport default collectionSlice.reducer\n"]},"metadata":{},"sourceType":"module"}