{"ast":null,"code":"import idx2class from \"./classIdxDict\";\n\nconst getTopKPred = (pred, k) => {\n  const predIdx = [];\n  const predNames = [];\n  const topkPred = [...pred].sort((a, b) => b - a).slice(0, k);\n  topkPred.map(i => predIdx.push(pred.indexOf(i)));\n  predIdx.map(i => predNames.push(idx2class[i]));\n  return predNames;\n};\n\nconst pokeObjFromName = (pokeName, pokeObjList) => {\n  return pokeObjList.find(obj => obj.name === pokeName);\n};\n\nconst getTopKPredPokeObj = (pred, k, pokeObjList) => {\n  const foundPokeObj = [];\n  const predPokeName = getTopKPred(pred, k);\n  predPokeName.map(name => foundPokeObj.push(pokeObjFromName(name, pokeObjList)));\n  return foundPokeObj;\n};\n\nexport default getTopKPredPokeObj;","map":{"version":3,"sources":["/home/faseeh/faseehWorkspace/Pokemon/pokezoo/frontend/src/features/find/utils/getTopKPred.js"],"names":["idx2class","getTopKPred","pred","k","predIdx","predNames","topkPred","sort","a","b","slice","map","i","push","indexOf","pokeObjFromName","pokeName","pokeObjList","find","obj","name","getTopKPredPokeObj","foundPokeObj","predPokeName"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,gBAAtB;;AAEA,MAAMC,WAAW,GAAG,CAACC,IAAD,EAAOC,CAAP,KAAa;AAC/B,QAAMC,OAAO,GAAG,EAAhB;AACA,QAAMC,SAAS,GAAG,EAAlB;AAEA,QAAMC,QAAQ,GAAG,CAAC,GAAGJ,IAAJ,EAAUK,IAAV,CAAe,CAACC,CAAD,EAAIC,CAAJ,KAAUA,CAAC,GAAGD,CAA7B,EAAgCE,KAAhC,CAAsC,CAAtC,EAAyCP,CAAzC,CAAjB;AAEAG,EAAAA,QAAQ,CAACK,GAAT,CAAaC,CAAC,IAAIR,OAAO,CAACS,IAAR,CAAaX,IAAI,CAACY,OAAL,CAAaF,CAAb,CAAb,CAAlB;AACAR,EAAAA,OAAO,CAACO,GAAR,CAAYC,CAAC,IAAIP,SAAS,CAACQ,IAAV,CAAeb,SAAS,CAACY,CAAD,CAAxB,CAAjB;AAEA,SAAOP,SAAP;AACD,CAVD;;AAYA,MAAMU,eAAe,GAAG,CAACC,QAAD,EAAWC,WAAX,KAA2B;AACjD,SAAOA,WAAW,CAACC,IAAZ,CAAiBC,GAAG,IAAIA,GAAG,CAACC,IAAJ,KAAaJ,QAArC,CAAP;AACD,CAFD;;AAIA,MAAMK,kBAAkB,GAAG,CAACnB,IAAD,EAAOC,CAAP,EAAUc,WAAV,KAA0B;AACnD,QAAMK,YAAY,GAAG,EAArB;AACA,QAAMC,YAAY,GAAGtB,WAAW,CAACC,IAAD,EAAOC,CAAP,CAAhC;AACAoB,EAAAA,YAAY,CAACZ,GAAb,CAAiBS,IAAI,IACnBE,YAAY,CAACT,IAAb,CAAkBE,eAAe,CAACK,IAAD,EAAOH,WAAP,CAAjC,CADF;AAIA,SAAOK,YAAP;AACD,CARD;;AAUA,eAAeD,kBAAf","sourcesContent":["import idx2class from \"./classIdxDict\"\n\nconst getTopKPred = (pred, k) => {\n  const predIdx = []\n  const predNames = []\n\n  const topkPred = [...pred].sort((a, b) => b - a).slice(0, k)\n\n  topkPred.map(i => predIdx.push(pred.indexOf(i)))\n  predIdx.map(i => predNames.push(idx2class[i]))\n\n  return predNames\n}\n\nconst pokeObjFromName = (pokeName, pokeObjList) => {\n  return pokeObjList.find(obj => obj.name === pokeName)\n}\n\nconst getTopKPredPokeObj = (pred, k, pokeObjList) => {\n  const foundPokeObj = []\n  const predPokeName = getTopKPred(pred, k)\n  predPokeName.map(name =>\n    foundPokeObj.push(pokeObjFromName(name, pokeObjList))\n  )\n\n  return foundPokeObj\n}\n\nexport default getTopKPredPokeObj\n"]},"metadata":{},"sourceType":"module"}