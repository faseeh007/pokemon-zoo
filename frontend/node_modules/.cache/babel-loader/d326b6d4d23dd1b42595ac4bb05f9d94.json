{"ast":null,"code":"var _jsxFileName = \"/home/faseeh/faseehWorkspace/Pokemon/pokezoo/frontend/src/App.js\";\n\n/** @jsx jsx */\n\n/** @jsxFrag React.Fragment */\nimport { jsx, css } from \"@emotion/core\";\nimport \"tailwindcss/dist/base.css\";\nimport { BrowserRouter as Router, Switch, Route, Redirect, useLocation } from \"react-router-dom\";\nimport { selectorAuth, tryAutoLogin } from \"./authSlice\";\nimport { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Navbar from \"./components/Navbar\";\nimport Landing from \"./features/landing/Landing\";\nimport Home from \"./features/home/Home\";\nimport Explore from \"./features/explore/Explore\";\nimport Find from \"./features/find/Find\";\n\nconst ProtectedRoute = ({\n  component: Component,\n  ...rest\n}) => {\n  const authState = useSelector(selectorAuth);\n  return jsx(Route, Object.assign({}, rest, {\n    render: props => {\n      if (authState.isUserLoggedIn) {\n        return jsx(Component, Object.assign({}, props, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 18\n          }\n        }));\n      } else {\n        return jsx(Redirect, {\n          to: {\n            pathname: \"/\",\n            state: {\n              from: props.location\n            }\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }\n        });\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }));\n};\n\nconst AuthRoute = ({\n  component: Component,\n  ...rest\n}) => {\n  const authState = useSelector(selectorAuth);\n  const location = useLocation();\n  return jsx(Route, Object.assign({}, rest, {\n    render: props => {\n      if (!authState.isUserLoggedIn) {\n        return jsx(Component, Object.assign({}, props, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 18\n          }\n        }));\n      } else {\n        return jsx(Redirect, {\n          to: {\n            pathname: \"/home\",\n            state: {\n              from: location\n            }\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }\n        });\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }));\n};\n\nconst App = () => {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(tryAutoLogin());\n  }, [dispatch]);\n  return jsx(Router, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 5\n    }\n  }, jsx(\"div\", {\n    css: {\n      \"display\": \"flex\",\n      \"flexDirection\": \"column\",\n      \"minHeight\": \"100vh\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }, jsx(Navbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }), jsx(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, jsx(AuthRoute, {\n    exact: true,\n    path: \"/\",\n    component: Landing,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }), jsx(ProtectedRoute, {\n    path: \"/home\",\n    component: Home,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }\n  }), jsx(ProtectedRoute, {\n    path: \"/explore\",\n    component: Explore,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }\n  }), jsx(ProtectedRoute, {\n    path: \"/find\",\n    component: Find,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }\n  }), jsx(Route, {\n    path: \"*\",\n    component: () => \"404 Not found.\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }\n  }))));\n};\n\nexport default App;","map":{"version":3,"sources":["/home/faseeh/faseehWorkspace/Pokemon/pokezoo/frontend/src/App.js"],"names":["jsx","css","BrowserRouter","Router","Switch","Route","Redirect","useLocation","selectorAuth","tryAutoLogin","useEffect","useSelector","useDispatch","Navbar","Landing","Home","Explore","Find","ProtectedRoute","component","Component","rest","authState","props","isUserLoggedIn","pathname","state","from","location","AuthRoute","App","dispatch"],"mappings":"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","sourcesContent":["/** @jsx jsx */\r\n/** @jsxFrag React.Fragment */\r\nimport { jsx, css } from \"@emotion/core\"\r\nimport tw from \"twin.macro\"\r\nimport \"tailwindcss/dist/base.css\"\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect,\r\n  useLocation,\r\n} from \"react-router-dom\"\r\n\r\nimport { selectorAuth, tryAutoLogin } from \"./authSlice\"\r\n\r\nimport { useEffect } from \"react\"\r\nimport { useSelector, useDispatch } from \"react-redux\"\r\n\r\nimport Navbar from \"./components/Navbar\"\r\nimport Landing from \"./features/landing/Landing\"\r\nimport Home from \"./features/home/Home\"\r\nimport Explore from \"./features/explore/Explore\"\r\nimport Find from \"./features/find/Find\"\r\n\r\nconst ProtectedRoute = ({ component: Component, ...rest }) => {\r\n  const authState = useSelector(selectorAuth)\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props => {\r\n        if (authState.isUserLoggedIn) {\r\n          return <Component {...props} />\r\n        } else {\r\n          return (\r\n            <Redirect\r\n              to={{\r\n                pathname: \"/\",\r\n                state: {\r\n                  from: props.location,\r\n                },\r\n              }}\r\n            />\r\n          )\r\n        }\r\n      }}\r\n    />\r\n  )\r\n}\r\n\r\nconst AuthRoute = ({ component: Component, ...rest }) => {\r\n  const authState = useSelector(selectorAuth)\r\n\r\n  const location = useLocation()\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props => {\r\n        if (!authState.isUserLoggedIn) {\r\n          return <Component {...props} />\r\n        } else {\r\n          return (\r\n            <Redirect\r\n              to={{\r\n                pathname: \"/home\",\r\n                state: {\r\n                  from: location,\r\n                },\r\n              }}\r\n            />\r\n          )\r\n        }\r\n      }}\r\n    />\r\n  )\r\n}\r\n\r\nconst App = () => {\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    dispatch(tryAutoLogin())\r\n  }, [dispatch])\r\n\r\n  return (\r\n    <Router>\r\n      <div tw=\"flex flex-col min-h-screen\">\r\n        <Navbar />\r\n        <Switch>\r\n          <AuthRoute exact path=\"/\" component={Landing} />\r\n          <ProtectedRoute path=\"/home\" component={Home} />\r\n          <ProtectedRoute path=\"/explore\" component={Explore} />\r\n          <ProtectedRoute path=\"/find\" component={Find} />\r\n          <Route path=\"*\" component={() => \"404 Not found.\"} />\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  )\r\n}\r\n\r\nexport default App\r\n"]},"metadata":{},"sourceType":"module"}