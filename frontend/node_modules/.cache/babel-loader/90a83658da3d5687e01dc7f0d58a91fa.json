{"ast":null,"code":"import _styled from \"@emotion/styled-base\";\n\n/** @jsx jsx */\nimport { jsx, css } from \"@emotion/core\";\n\n// generating colours like this because twin.macro doesn't\n// support passing colours as strings\nconst generatePokeTypeColor = color => {\n  switch (color) {\n    case \"normal\":\n      return {\n        \"--bg-opacity\": \"1\",\n        \"backgroundColor\": \"rgba(192, 86, 33, var(--bg-opacity))\"\n      };\n\n    case \"fighting\":\n      return {\n        \"--bg-opacity\": \"1\",\n        \"backgroundColor\": \"rgba(155, 44, 44, var(--bg-opacity))\"\n      };\n\n    case \"flying\":\n      return {\n        \"--bg-opacity\": \"1\",\n        \"backgroundColor\": \"rgba(128, 90, 213, var(--bg-opacity))\"\n      };\n\n    case \"poison\":\n      return {\n        \"--bg-opacity\": \"1\",\n        \"backgroundColor\": \"rgba(151, 38, 109, var(--bg-opacity))\"\n      };\n\n    case \"ground\":\n      return {\n        \"--bg-opacity\": \"1\",\n        \"backgroundColor\": \"rgba(214, 158, 46, var(--bg-opacity))\"\n      };\n\n    case \"rock\":\n      return {\n        \"--bg-opacity\": \"1\",\n        \"backgroundColor\": \"rgba(151, 90, 22, var(--bg-opacity))\"\n      };\n\n    case \"bug\":\n      return {\n        \"--bg-opacity\": \"1\",\n        \"backgroundColor\": \"rgba(56, 161, 105, var(--bg-opacity))\"\n      };\n\n    case \"ghost\":\n      return {\n        \"--bg-opacity\": \"1\",\n        \"backgroundColor\": \"rgba(68, 51, 122, var(--bg-opacity))\"\n      };\n\n    case \"steel\":\n      return {\n        \"--bg-opacity\": \"1\",\n        \"backgroundColor\": \"rgba(113, 128, 150, var(--bg-opacity))\"\n      };\n\n    case \"fire\":\n      return {\n        \"--bg-opacity\": \"1\",\n        \"backgroundColor\": \"rgba(237, 137, 54, var(--bg-opacity))\"\n      };\n\n    case \"water\":\n      return {\n        \"--bg-opacity\": \"1\",\n        \"backgroundColor\": \"rgba(66, 153, 225, var(--bg-opacity))\"\n      };\n\n    case \"grass\":\n      return {\n        \"--bg-opacity\": \"1\",\n        \"backgroundColor\": \"rgba(39, 103, 73, var(--bg-opacity))\"\n      };\n\n    case \"electric\":\n      return {\n        \"--bg-opacity\": \"1\",\n        \"backgroundColor\": \"rgba(236, 201, 75, var(--bg-opacity))\"\n      };\n\n    case \"psychic\":\n      return {\n        \"--bg-opacity\": \"1\",\n        \"backgroundColor\": \"rgba(213, 63, 140, var(--bg-opacity))\"\n      };\n\n    case \"ice\":\n      return {\n        \"--bg-opacity\": \"1\",\n        \"backgroundColor\": \"rgba(144, 205, 244, var(--bg-opacity))\"\n      };\n\n    case \"dragon\":\n      return {\n        \"--bg-opacity\": \"1\",\n        \"backgroundColor\": \"rgba(183, 148, 244, var(--bg-opacity))\"\n      };\n\n    case \"dark\":\n      return {\n        \"--bg-opacity\": \"1\",\n        \"backgroundColor\": \"rgba(123, 52, 30, var(--bg-opacity))\"\n      };\n\n    case \"fairy\":\n      return {\n        \"--bg-opacity\": \"1\",\n        \"backgroundColor\": \"rgba(251, 182, 206, var(--bg-opacity))\"\n      };\n\n    case \"unknown\":\n      return {\n        \"--bg-opacity\": \"1\",\n        \"backgroundColor\": \"rgba(160, 174, 192, var(--bg-opacity))\"\n      };\n\n    case \"shadow\":\n      return {\n        \"--bg-opacity\": \"1\",\n        \"backgroundColor\": \"rgba(74, 85, 104, var(--bg-opacity))\"\n      };\n\n    default:\n      return {\n        \"--bg-opacity\": \"1\",\n        \"backgroundColor\": \"rgba(255, 255, 255, var(--bg-opacity))\"\n      };\n  }\n}; // generate a styled p tag with dynamic background colour.\n\n\nconst PokeTypeColorElement = _styled(\"p\", {\n  target: \"e1jujn3q0\",\n  label: \"PokeTypeColorElement\"\n})(({\n  color\n}) => generatePokeTypeColor(color), process.env.NODE_ENV === \"production\" ? \"\" : \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2Zhc2VlaC9mYXNlZWhXb3Jrc3BhY2UvUG9rZW1vbi9wb2tlem9vL2Zyb250ZW5kL3NyYy9mZWF0dXJlcy9leHBsb3JlL2NvbXBvbmVudHMvcG9rZVR5cGVDb2xvci5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUF1RHFDIiwiZmlsZSI6Ii9ob21lL2Zhc2VlaC9mYXNlZWhXb3Jrc3BhY2UvUG9rZW1vbi9wb2tlem9vL2Zyb250ZW5kL3NyYy9mZWF0dXJlcy9leHBsb3JlL2NvbXBvbmVudHMvcG9rZVR5cGVDb2xvci5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qKiBAanN4IGpzeCAqL1xuaW1wb3J0IHsganN4LCBjc3MgfSBmcm9tIFwiQGVtb3Rpb24vY29yZVwiXG5pbXBvcnQgdHcgZnJvbSBcInR3aW4ubWFjcm9cIlxuaW1wb3J0IHN0eWxlZCBmcm9tIFwiQGVtb3Rpb24vc3R5bGVkL21hY3JvXCJcblxuLy8gZ2VuZXJhdGluZyBjb2xvdXJzIGxpa2UgdGhpcyBiZWNhdXNlIHR3aW4ubWFjcm8gZG9lc24ndFxuLy8gc3VwcG9ydCBwYXNzaW5nIGNvbG91cnMgYXMgc3RyaW5nc1xuY29uc3QgZ2VuZXJhdGVQb2tlVHlwZUNvbG9yID0gY29sb3IgPT4ge1xuICBzd2l0Y2ggKGNvbG9yKSB7XG4gICAgY2FzZSBcIm5vcm1hbFwiOlxuICAgICAgcmV0dXJuIHR3YGJnLW9yYW5nZS03MDBgXG4gICAgY2FzZSBcImZpZ2h0aW5nXCI6XG4gICAgICByZXR1cm4gdHdgYmctcmVkLTgwMGBcbiAgICBjYXNlIFwiZmx5aW5nXCI6XG4gICAgICByZXR1cm4gdHdgYmctcHVycGxlLTYwMGBcbiAgICBjYXNlIFwicG9pc29uXCI6XG4gICAgICByZXR1cm4gdHdgYmctcGluay04MDBgXG4gICAgY2FzZSBcImdyb3VuZFwiOlxuICAgICAgcmV0dXJuIHR3YGJnLXllbGxvdy02MDBgXG4gICAgY2FzZSBcInJvY2tcIjpcbiAgICAgIHJldHVybiB0d2BiZy15ZWxsb3ctODAwYFxuICAgIGNhc2UgXCJidWdcIjpcbiAgICAgIHJldHVybiB0d2BiZy1ncmVlbi02MDBgXG4gICAgY2FzZSBcImdob3N0XCI6XG4gICAgICByZXR1cm4gdHdgYmctcHVycGxlLTkwMGBcbiAgICBjYXNlIFwic3RlZWxcIjpcbiAgICAgIHJldHVybiB0d2BiZy1ncmF5LTYwMGBcbiAgICBjYXNlIFwiZmlyZVwiOlxuICAgICAgcmV0dXJuIHR3YGJnLW9yYW5nZS01MDBgXG4gICAgY2FzZSBcIndhdGVyXCI6XG4gICAgICByZXR1cm4gdHdgYmctYmx1ZS01MDBgXG4gICAgY2FzZSBcImdyYXNzXCI6XG4gICAgICByZXR1cm4gdHdgYmctZ3JlZW4tODAwYFxuICAgIGNhc2UgXCJlbGVjdHJpY1wiOlxuICAgICAgcmV0dXJuIHR3YGJnLXllbGxvdy01MDBgXG4gICAgY2FzZSBcInBzeWNoaWNcIjpcbiAgICAgIHJldHVybiB0d2BiZy1waW5rLTYwMGBcbiAgICBjYXNlIFwiaWNlXCI6XG4gICAgICByZXR1cm4gdHdgYmctYmx1ZS0zMDBgXG4gICAgY2FzZSBcImRyYWdvblwiOlxuICAgICAgcmV0dXJuIHR3YGJnLXB1cnBsZS00MDBgXG4gICAgY2FzZSBcImRhcmtcIjpcbiAgICAgIHJldHVybiB0d2BiZy1vcmFuZ2UtOTAwYFxuICAgIGNhc2UgXCJmYWlyeVwiOlxuICAgICAgcmV0dXJuIHR3YGJnLXBpbmstMzAwYFxuICAgIGNhc2UgXCJ1bmtub3duXCI6XG4gICAgICByZXR1cm4gdHdgYmctZ3JheS01MDBgXG4gICAgY2FzZSBcInNoYWRvd1wiOlxuICAgICAgcmV0dXJuIHR3YGJnLWdyYXktNzAwYFxuICAgIGRlZmF1bHQ6XG4gICAgICByZXR1cm4gdHdgYmctd2hpdGVgXG4gIH1cbn1cblxuLy8gZ2VuZXJhdGUgYSBzdHlsZWQgcCB0YWcgd2l0aCBkeW5hbWljIGJhY2tncm91bmQgY29sb3VyLlxuY29uc3QgUG9rZVR5cGVDb2xvckVsZW1lbnQgPSBzdHlsZWQucGBcbiAgJHsoeyBjb2xvciB9KSA9PiBnZW5lcmF0ZVBva2VUeXBlQ29sb3IoY29sb3IpfVxuYFxuZXhwb3J0IGRlZmF1bHQgUG9rZVR5cGVDb2xvckVsZW1lbnRcbiJdfQ== */\");\n\nexport default PokeTypeColorElement;","map":{"version":3,"sources":["/home/faseeh/faseehWorkspace/Pokemon/pokezoo/frontend/src/features/explore/components/pokeTypeColor.js"],"names":["jsx","css","generatePokeTypeColor","color","PokeTypeColorElement"],"mappings":";;AAAA;AACA,SAASA,GAAT,EAAcC,GAAd,QAAyB,eAAzB;;AAIA;AACA;AACA,MAAMC,qBAAqB,GAAGC,KAAK,IAAI;AACrC,UAAQA,KAAR;AACE,SAAK,QAAL;AACE;AAAA;AAAA;AAAA;;AACF,SAAK,UAAL;AACE;AAAA;AAAA;AAAA;;AACF,SAAK,QAAL;AACE;AAAA;AAAA;AAAA;;AACF,SAAK,QAAL;AACE;AAAA;AAAA;AAAA;;AACF,SAAK,QAAL;AACE;AAAA;AAAA;AAAA;;AACF,SAAK,MAAL;AACE;AAAA;AAAA;AAAA;;AACF,SAAK,KAAL;AACE;AAAA;AAAA;AAAA;;AACF,SAAK,OAAL;AACE;AAAA;AAAA;AAAA;;AACF,SAAK,OAAL;AACE;AAAA;AAAA;AAAA;;AACF,SAAK,MAAL;AACE;AAAA;AAAA;AAAA;;AACF,SAAK,OAAL;AACE;AAAA;AAAA;AAAA;;AACF,SAAK,OAAL;AACE;AAAA;AAAA;AAAA;;AACF,SAAK,UAAL;AACE;AAAA;AAAA;AAAA;;AACF,SAAK,SAAL;AACE;AAAA;AAAA;AAAA;;AACF,SAAK,KAAL;AACE;AAAA;AAAA;AAAA;;AACF,SAAK,QAAL;AACE;AAAA;AAAA;AAAA;;AACF,SAAK,MAAL;AACE;AAAA;AAAA;AAAA;;AACF,SAAK,OAAL;AACE;AAAA;AAAA;AAAA;;AACF,SAAK,SAAL;AACE;AAAA;AAAA;AAAA;;AACF,SAAK,QAAL;AACE;AAAA;AAAA;AAAA;;AACF;AACE;AAAA;AAAA;AAAA;AA1CJ;AA4CD,CA7CD,C,CA+CA;;;AACA,MAAMC,oBAAoB;AAAA;AAAA;AAAA,GACtB,CAAC;AAAED,EAAAA;AAAF,CAAD,KAAeD,qBAAqB,CAACC,KAAD,CADd,ykFAA1B;;AAGA,eAAeC,oBAAf","sourcesContent":["/** @jsx jsx */\nimport { jsx, css } from \"@emotion/core\"\nimport tw from \"twin.macro\"\nimport styled from \"@emotion/styled/macro\"\n\n// generating colours like this because twin.macro doesn't\n// support passing colours as strings\nconst generatePokeTypeColor = color => {\n  switch (color) {\n    case \"normal\":\n      return tw`bg-orange-700`\n    case \"fighting\":\n      return tw`bg-red-800`\n    case \"flying\":\n      return tw`bg-purple-600`\n    case \"poison\":\n      return tw`bg-pink-800`\n    case \"ground\":\n      return tw`bg-yellow-600`\n    case \"rock\":\n      return tw`bg-yellow-800`\n    case \"bug\":\n      return tw`bg-green-600`\n    case \"ghost\":\n      return tw`bg-purple-900`\n    case \"steel\":\n      return tw`bg-gray-600`\n    case \"fire\":\n      return tw`bg-orange-500`\n    case \"water\":\n      return tw`bg-blue-500`\n    case \"grass\":\n      return tw`bg-green-800`\n    case \"electric\":\n      return tw`bg-yellow-500`\n    case \"psychic\":\n      return tw`bg-pink-600`\n    case \"ice\":\n      return tw`bg-blue-300`\n    case \"dragon\":\n      return tw`bg-purple-400`\n    case \"dark\":\n      return tw`bg-orange-900`\n    case \"fairy\":\n      return tw`bg-pink-300`\n    case \"unknown\":\n      return tw`bg-gray-500`\n    case \"shadow\":\n      return tw`bg-gray-700`\n    default:\n      return tw`bg-white`\n  }\n}\n\n// generate a styled p tag with dynamic background colour.\nconst PokeTypeColorElement = styled.p`\n  ${({ color }) => generatePokeTypeColor(color)}\n`\nexport default PokeTypeColorElement\n"]},"metadata":{},"sourceType":"module"}